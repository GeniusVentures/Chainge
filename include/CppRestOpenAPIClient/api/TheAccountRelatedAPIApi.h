/**
 * Open API
 * Open API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: liuxiaobin@chainge.finance
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.5.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * TheAccountRelatedAPIApi.h
 *
 *
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_TheAccountRelatedAPIApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_TheAccountRelatedAPIApi_H_

#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/AppBindAddressParameters.h"
#include "CppRestOpenAPIClient/model/BaseResponseMapstringobject.h"
#include "CppRestOpenAPIClient/model/OpenAPICheckSignatureDataParameters.h"
#include "CppRestOpenAPIClient/model/OpenBindAddressParameter.h"
#include <boost/optional.hpp>
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;

class TheAccountRelatedAPIApi {
public:
  explicit TheAccountRelatedAPIApi(std::shared_ptr<const ApiClient> apiClient);

  virtual ~TheAccountRelatedAPIApi();

  /// <summary>
  /// Bind non evm address
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="appKey">appKey (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="expireTime">expireTime (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="signature">signature (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="timestamp">timestamp (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="bind_non_EVM_address">JSON Data (optional)</param>
  pplx::task<std::shared_ptr<BaseResponseMapstringobject>> bindAddressUsingPOST(
      boost::optional<utility::string_t> appKey,
      boost::optional<utility::string_t> expireTime,
      boost::optional<utility::string_t> signature,
      boost::optional<utility::string_t> timestamp,
      boost::optional<std::shared_ptr<AppBindAddressParameters>>
          bind_non_EVM_address) const;
  /// <summary>
  /// Check signature method
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="appKey">appKey (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="expireTime">expireTime (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="signature">signature (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="timestamp">timestamp (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="check_signature_method">Pass in JSON format (optional)</param>
  pplx::task<std::shared_ptr<BaseResponseMapstringobject>>
  checkSignatureRequestUsingPOST(
      boost::optional<utility::string_t> appKey,
      boost::optional<utility::string_t> expireTime,
      boost::optional<utility::string_t> signature,
      boost::optional<utility::string_t> timestamp,
      boost::optional<std::shared_ptr<OpenAPICheckSignatureDataParameters>>
          check_signature_method) const;
  /// <summary>
  /// Get FeeTo Info
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="appKey">appKey (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="expireTime">expireTime (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="signature">signature (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="timestamp">timestamp (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param>
  pplx::task<std::shared_ptr<BaseResponseMapstringobject>>
  getFeeToInfoUsingGET(boost::optional<utility::string_t> appKey,
                       boost::optional<utility::string_t> expireTime,
                       boost::optional<utility::string_t> signature,
                       boost::optional<utility::string_t> timestamp) const;
  /// <summary>
  /// Set feeTo address Info
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="appKey">appKey (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="expireTime">expireTime (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="signature">signature (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="timestamp">timestamp (optional, default to
  /// utility::conversions::to_string_t(&quot;&quot;))</param> <param
  /// name="set_fee_to_address">JSON Data (optional)</param>
  pplx::task<std::shared_ptr<BaseResponseMapstringobject>>
  setFeeToInfoUsingPOST(
      boost::optional<utility::string_t> appKey,
      boost::optional<utility::string_t> expireTime,
      boost::optional<utility::string_t> signature,
      boost::optional<utility::string_t> timestamp,
      boost::optional<std::shared_ptr<OpenBindAddressParameter>>
          set_fee_to_address) const;

protected:
  std::shared_ptr<const ApiClient> m_ApiClient;
};

} // namespace api
} // namespace client
} // namespace openapitools
} // namespace org

#endif /* ORG_OPENAPITOOLS_CLIENT_API_TheAccountRelatedAPIApi_H_ */
